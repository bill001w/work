.caret {
    display: inline-block;
    width: 0;
    height: 0;
    margin-left: 2px;
    vertical-align: middle;
    border-top: $caret-width-base solid;
    border-right: $caret-width-base solid transparent;
    border-left: $caret-width-base solid transparent;
}

.dropdown {
    position: relative;
}

.dropdown-toggle:focus {
    outline: 0;
}

.dropdown-menu {
    display: none;
    position: absolute;
    float: left;
    z-index: $zindex-dropdown;
    top: 100%;
    left: 0;
    margin: 0;
    padding: 0;
    min-width: 160px;
    border: 1px solid $dropdown-border;
    border-top: none;
    border-bottom: none;
    border-radius: $border-radius-base;
    background-color: $dropdown-bg;
    list-style: none;
    font-size: $font-size-base;
    text-align: left;
    box-shadow: 0 2px 4px rgba(0, 0, 0, .1);
    background-clip: padding-box;

    &.pull-right {
        right: 0;
        left: auto;
    }

    .divider {
        @include nav-divider($dropdown-divider-bg);
    }

    > li {
        > a {
            display: block;
            clear: both;
            padding: $padding-asym-base;
            line-height: $line-height-base;
            border-bottom: 1px solid $dropdown-border;
            font-weight: normal;
            white-space: nowrap;
            color: $dropdown-link-color;

            &:hover,
            &:focus {
                text-decoration: none;
                color: $dropdown-link-hover-color;
                background-color: $dropdown-link-hover-bg;
            }
        }

        &:last-child > a {
            border-bottom: none;
        }
    }

    > .active > a {
        &,
        &:hover,
        &:focus {
            text-decoration: none;
            color: $dropdown-link-active-color;
            background-color: $dropdown-link-active-bg;
            outline: 0;
        }
    }

    > .disabled > a {
        &,
        &:hover,
        &:focus {
            color: $dropdown-link-disabled-color;
        }

        &:hover,
        &:focus {
            background-color: transparent;
            background-image: none; // Remove CSS gradient
            text-decoration: none;
            @include reset-filter();
            cursor: not-allowed;
        }
    }

    > .dropdown {
        > .dropdown-menu {
            top: 0;
            left: 100%;
        }

        &.dropdown-menu-left {
            right: 100%;
        }
    }

}

.dropdown-header {
    display: block;
    padding: $padding-asym-base;
    border-bottom: 1px solid $dropdown-border;
    font-size: $font-size-small;
    line-height: $line-height-base;
    color: $dropdown-header-color;
}

.open {
    > .dropdown-menu {
        display: block;
    }

    > a {
        // Remove the outline when :focus is triggered
        outline: 0;
    }
}

.dropdown-backdrop {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    z-index: ($zindex-dropdown - 10);
    background-color: $dropdown-backdrop-bg;

    &.fade {
        @include opacity(0);
    }
    &.in {
        @include opacity($dropdown-backdrop-opacity);
    }
}

.dropdown-menu-right {
    left: auto;
    right: 0;
}

.dropdown-menu-left {
    left: 0;
    right: auto;
}

@include media-breakpoint-up('sm') {
    .navbar-right {
        .dropdown-menu {
            left: auto;
            right: 0;
        }

        .dropdown-menu-left {
            left: 0;
            right: auto;
        }
    }
}

/* 按钮组中的下拉列表 */
.btn-group .dropdown-toggle:active,
.btn-group.open .dropdown-toggle {
    outline: 0;
}

.btn-group.open .dropdown-toggle {
    box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
    &.btn-link {
        box-shadow: none;
    }
}

.btn-lg .caret {
    border-width: $caret-width-large $caret-width-large 0;
    border-bottom-width: 0;
}

.dropup {
    .caret {
        border-top: 0;
        border-bottom: $caret-width-base solid;
        content: "";
    }

    .dropdown-menu {
        top: auto;
        bottom: 100%;
        margin-bottom: 1px;
    }
}

.dropup .btn-lg .caret {
    border-width: 0 $caret-width-large $caret-width-large;
}

// 水平按钮组圆角问题
.btn-group {
    // 如果不是第1个、最后1个元素，就去掉btn-group包裹的button的圆角
    > .btn-group:not(:first-child):not(:last-child) > .dropdown-toggle {
        border-radius: 0;
    }
    // 如果是第1个元素且不是最后1个元素，去掉其中dropdown-toggle右边圆角
    > .btn-group:first-child:not(:last-child) > .dropdown-toggle {
        @include border-right-radius(0);
        // 因为在按钮组中，.dropdown-toggle作为嵌套.btn-group的唯一button，已经被去掉了部分圆角，因此需要补回
        @include border-left-radius($border-radius-base);
    }
    // 如果是最后1个元素且不是第1个元素，去掉其中dropdown-toggle右边圆角
    > .btn-group:last-child:not(:first-child) > .dropdown-toggle {
        @include border-left-radius(0);
        @include border-right-radius($border-radius-base);
    }
}

// 垂直按钮组圆角问题
.btn-group-vertical {
    // 如果不是第1个、最后1个元素，就去掉btn-group包裹的button的圆角
    > .btn-group:not(:first-child):not(:last-child) > .dropdown-toggle {
        border-radius: 0;
    }
    // 如果是第1个元素且不是最后1个元素，去掉其中dropdown-toggle右边圆角
    > .btn-group:first-child:not(:last-child) > .dropdown-toggle {
        @include border-bottom-radius(0);
        // 因为在按钮组中，.dropdown-toggle作为嵌套.btn-group的唯一button，已经被去掉了部分圆角，因此需要补回
        @include border-top-radius($border-radius-base);
    }
    // 如果是最后1个元素且不是第1个元素，去掉其中dropdown-toggle右边圆角
    > .btn-group:last-child:not(:first-child) > .dropdown-toggle {
        @include border-top-radius(0);
        @include border-bottom-radius($border-radius-base);
    }
}
